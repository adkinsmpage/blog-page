import type { GetStaticProps, InferGetStaticPropsType, NextPage } from "next";
import Head from "next/head";
import PostModel from "../models/post";

import Post from "../components/Post/Post";
import PostList from "../components/PostList/PostList";
import dbConnect from "../lib/dbConnect";
import moment from "moment";
import React, { useEffect, useState } from "react";

export interface IPostElement {
  title: string;
  author: string;
  createdAt: string;
  content: string;
  _id: string;
}

export const getStaticProps: GetStaticProps = async () => {
  await dbConnect();
  const postsList = await PostModel.find({});

  if (postsList.length === 0) return { notFound: true };

  return {
    props: { postsList: JSON.stringify(postsList) },
  };
};

const Home: NextPage = ({
  postsList,
}: InferGetStaticPropsType<typeof getStaticProps>) => {
  const [posts, setPosts] = useState<React.ReactNode[]>([]);

  useEffect(() => {
    if (!postsList) return;
    const postsArr = JSON.parse(postsList).map((element: IPostElement) => (
      <Post key={element._id} data={element} />
    ));
    setPosts(postsArr);
  }, [postsList]);

  return (
    <>
      <Head>
        <title>1MinBlog</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <PostList>{posts}</PostList>
    </>
  );
};

export default Home;
